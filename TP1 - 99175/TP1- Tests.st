TestCase subclass: #AlgoTripTest	instanceVariableNames: ''	classVariableNames: ''	poolDictionaries: ''	category: 'AlgoViajesTest'!!AlgoTripTest methodsFor: 'tests' stamp: 'jtb 4/14/2018 13:46'!test07ViajeDeIdaConComidaEspecialAbordo
	| algoTrip costoEsperado |

	algoTrip := AlgoTrip new.
	algoTrip agregarCiudad: 'Buenos Aires' dePais: 'Argentina' conCodigo: 'BUE' latitud: -34.60 longitud: -58.38.	algoTrip agregarCiudad: 'Cordoba' dePais: 'Argentina' conCodigo: 'COR' latitud: -31.42 longitud: -64.18.
	algoTrip crearViaje: 'vacaciones-2018'.
	algoTrip agregarVueloEnViaje: 'vacaciones-2018' de: 'BUE' a: 'COR' enFecha: '2018-6-1'.

	algoTrip solicitarComidaEspecialAbordoPara: 'vacaciones-2018'.
	" comida a bordo suma 100 pesos por vuelo"
	costoEsperado := 645.97 + 100.
	self assert: ((algoTrip obtenerCostoDelViaje: 'vacaciones-2018') closeTo: costoEsperado precision: 0.001).
	! !!AlgoTripTest methodsFor: 'tests' stamp: 'jtb 4/14/2018 11:12'!test03ViajeConVueloInternacional
	| algoTrip costoEsperado |
	
	algoTrip := AlgoTrip new.
	algoTrip agregarCiudad: 'Buenos Aires' dePais: 'Argentina' conCodigo: 'BUE' latitud: -34.60 longitud: -58.38.
	algoTrip agregarCiudad: 'Rio' dePais: 'Brasil' conCodigo: 'RIO' latitud: -22.90 longitud: -43.19.
	algoTrip crearViaje: 'vacaciones-2018'.	algoTrip agregarVueloEnViaje: 'vacaciones-2018' de: 'BUE' a: 'RIO' enFecha: '2018-6-1'.
	"costo: 1.5 peso por km para vuelos internacionales, mas 5% de impuestos"
	costoEsperado:= 1966.7 * 1.5 * 1.05.	self assert: ((algoTrip obtenerCostoDelViaje: 'vacaciones-2018') closeTo: costoEsperado precision: 0.001).
	self assert: (algoTrip obtenerDuracionEnDiasDelViaje: 'vacaciones-2018') equals: 1.! !!AlgoTripTest methodsFor: 'tests' stamp: 'LocaDesquiciada 4/30/2018 18:47'!test08PaqueteConVuelosYHotel
	| algoTrip costoEsperado costoVuelos costoHotel |

	algoTrip := AlgoTrip new.	algoTrip agregarCiudad: 'Buenos Aires' dePais: 'Argentina' conCodigo: 'BUE' latitud: -34.60 longitud: -58.38.
	algoTrip agregarCiudad: 'Moscu' dePais: 'Rusia' conCodigo: 'MOW' latitud: 55.75 longitud: 37.62.
	algoTrip agregarHotel: 'Matreshka Hotel' en: 'MOW' conPrecioPorNoche: 3000.	algoTrip agregarPaquete: 'Rusia 18'.	algoTrip agregarVueloEnPaquete: 'Rusia 18' de: 'BUE' a: 'MOW' enFecha: '2018-6-13'.	algoTrip agregarVueloEnPaquete: 'Rusia 18' de: 'MOW' a: 'BUE' enFecha: '2018-7-16'.	algoTrip agregarEstadiaEnPaquete: 'Rusia 18' enHotel: 'Matreshka Hotel'  desde: '2018-6-14' hasta: '2018-7-16'.
	algoTrip crearViaje: 'vacaciones-2018'.	algoTrip agregarPaquete: 'Rusia 18' enViaje: 'vacaciones-2018'.	" El paquete descuenta 10% del costo de vuelos y 20% del costo de hotel. "	costoVuelos := 2 * (13475.12 * 1.5 * 1.05).	costoHotel := (32 * 3000).	costoEsperado := (0.9 * costoVuelos) + (0.8 * costoHotel).	
	self assert: ((algoTrip obtenerCostoDelViaje: 'vacaciones-2018') closeTo: costoEsperado precision: 0.001).		" El viaje dura 34 dias. "	self assert: (algoTrip obtenerDuracionEnDiasDelViaje: 'vacaciones-2018') equals: 34.		algoTrip agregarAsistenciaAlViajeroAlViaje: 'vacaciones-2018'.		" El paquete bonifica la asistencia al viajero completamente. "	self assert: ((algoTrip obtenerCostoDelViaje: 'vacaciones-2018') closeTo: costoEsperado precision: 0.001).! !!AlgoTripTest methodsFor: 'tests' stamp: 'LocaDesquiciada 4/23/2018 21:22'!test01ViajeVacio
	| algoTrip |
	
	algoTrip := AlgoTrip new.
	algoTrip crearViaje: 'vacaciones-2018'.		self assert: (algoTrip obtenerCostoDelViaje: 'vacaciones-2018') closeTo: 0.	self assert: (algoTrip obtenerDuracionEnDiasDelViaje: 'vacaciones-2018') equals: 0.
	! !!AlgoTripTest methodsFor: 'tests' stamp: 'LocaDesquiciada 4/30/2018 17:56'!test06ViajesConAsistenciaAlViajero	| algoTrip costoEsperado |		algoTrip := AlgoTrip new.	algoTrip agregarCiudad: 'Buenos Aires' dePais: 'Argentina' conCodigo: 'BUE' latitud: -34.60 longitud: -58.38.	algoTrip agregarCiudad: 'Cordoba' dePais: 'Argentina' conCodigo: 'COR' latitud: -31.42 longitud: -64.18.	algoTrip agregarHotel: 'Hotel Fernet Con Cola' en: 'COR' conPrecioPorNoche: 500.		algoTrip crearViaje: 'vacaciones-2018'.	algoTrip agregarVueloEnViaje: 'vacaciones-2018' de: 'BUE' a: 'COR' enFecha: '2018-6-1'.	algoTrip agregarAsistenciaAlViajeroAlViaje: 'vacaciones-2018'.		algoTrip crearViaje: 'vacaciones-2019'.	algoTrip agregarEstadiaEnViaje: 'vacaciones-2019' enHotel: 'Hotel Fernet Con Cola' desde: '2018-6-1' hasta: '2018-6-7'.	algoTrip agregarAsistenciaAlViajeroAlViaje: 'vacaciones-2019'.		algoTrip crearViaje: 'Fiesta del Fernet'.	algoTrip agregarVueloEnViaje: 'Fiesta del Fernet' de: 'BUE' a: 'COR' enFecha: '2018-8-1'.	algoTrip agregarVueloEnViaje: 'Fiesta del Fernet' de: 'COR' a: 'BUE' enFecha: '2018-8-7'.	algoTrip agregarEstadiaEnViaje: 'Fiesta del Fernet' enHotel: 'Hotel Fernet Con Cola' desde: '2018-8-1' hasta: '2018-8-7'.	algoTrip agregarAsistenciaAlViajeroAlViaje: 'Fiesta del Fernet'.		" Asistencia al viajero para vuelos: 10% del valor (ya sean internacionales o domesticos). "	costoEsperado := 645.97 * 1 * 1.1.	self assert: ((algoTrip obtenerCostoDelViaje: 'vacaciones-2018') closeTo: costoEsperado precision: 0.001).	" Asistencia al viajero para hoteles: 30 pesos por dia de estadia. "	costoEsperado := (6 * 500) + (6 * 30).	self assert: ((algoTrip obtenerCostoDelViaje: 'vacaciones-2019') closeTo: costoEsperado precision: 0.001).	" Viaje de ida y vuelta con hotel y asistencia al viajero. "	costoEsperado := (2 * 645.97 * 1 * 1.1) + (6 * 500) + (6 * 30).	self assert: ((algoTrip obtenerCostoDelViaje: 'Fiesta del Fernet') closeTo: costoEsperado precision: 0.001).! !!AlgoTripTest methodsFor: 'tests' stamp: 'jtb 4/14/2018 13:30'!test04ViajeConVueloIdaYVuelta
	| algoTrip costoEsperado |		algoTrip := AlgoTrip new.	algoTrip agregarCiudad: 'Buenos Aires' dePais: 'Argentina' conCodigo: 'BUE' latitud: -34.60 longitud: -58.38.	algoTrip agregarCiudad: 'Rio' dePais: 'Brasil' conCodigo: 'RIO' latitud: -22.90 longitud: -43.19.	algoTrip crearViaje: 'vacaciones-2018'.	algoTrip agregarVueloEnViaje: 'vacaciones-2018' de: 'BUE' a: 'RIO' enFecha: '2018-6-1'.	algoTrip agregarVueloEnViaje: 'vacaciones-2018' de: 'RIO' a: 'BUE' enFecha: '2018-6-5'.
	" Dos vuelos internacionales iguales. "
	costoEsperado := 2 * (1966.7 * 1.5 * 1.05).	self assert: ((algoTrip obtenerCostoDelViaje: 'vacaciones-2018') closeTo: costoEsperado precision: 0.001).		" El viaje dura 5 dias, incluyendo tanto el dia del primer vuelo como el del ultimo. "	self assert: (algoTrip obtenerDuracionEnDiasDelViaje: 'vacaciones-2018') equals: 5.
! !!AlgoTripTest methodsFor: 'tests' stamp: 'LocaDesquiciada 4/27/2018 09:31'!test05ViajeConHotel
	| algoTrip costoEsperado |

	algoTrip := AlgoTrip new.
	algoTrip agregarCiudad: 'Rio' dePais: 'Brasil' conCodigo: 'RIO' latitud: -22.90 longitud: -43.19.
	algoTrip agregarHotel: 'Copacabana Palace' en: 'RIO' conPrecioPorNoche: 3000.
	algoTrip crearViaje: 'vacaciones-2018'.	algoTrip agregarEstadiaEnViaje: 'vacaciones-2018' enHotel: 'Copacabana Palace' desde: '2018-6-1' hasta: '2018-6-7'.
		" 6 noches a 3000 pesos por noche "	costoEsperado := 6 * 3000.	self assert: ((algoTrip obtenerCostoDelViaje: 'vacaciones-2018') closeTo: costoEsperado precision: 0.001).		" La estadia es de 6 noches pero el viaje es de 7 dias. "
	self assert: (algoTrip obtenerDuracionEnDiasDelViaje: 'vacaciones-2018') equals: 7.! !!AlgoTripTest methodsFor: 'tests' stamp: 'jtb 4/14/2018 13:13'!test06ViajeConVueloIdaYVueltaYHotel	| algoTrip costoEsperado |		algoTrip := AlgoTrip new.	algoTrip agregarCiudad: 'Buenos Aires' dePais: 'Argentina' conCodigo: 'BUE' latitud: -34.60 longitud: -58.38.	algoTrip agregarCiudad: 'Rio' dePais: 'Brasil' conCodigo: 'RIO' latitud: -22.90 longitud: -43.19.	algoTrip agregarHotel: 'Copacabana Palace' en: 'RIO' conPrecioPorNoche: 3000.	algoTrip crearViaje: 'vacaciones-2018'.	algoTrip agregarVueloEnViaje: 'vacaciones-2018' de: 'BUE' a: 'RIO' enFecha: '2018-6-1'.	algoTrip agregarVueloEnViaje: 'vacaciones-2018' de: 'RIO' a: 'BUE' enFecha: '2018-6-6'.	algoTrip agregarEstadiaEnViaje: 'vacaciones-2018' enHotel: 'Copacabana Palace' desde: '2018-6-1' hasta: '2018-6-6'.	" Eos vuelos internacionales iguales y cinco noches de hotel. "	costoEsperado := (2 * (1966.7 * 1.5 * 1.05)) + (5 * 3000).	self assert: ((algoTrip obtenerCostoDelViaje: 'vacaciones-2018') closeTo: costoEsperado precision: 0.001).		" El viaje dura 6 dias: salimos el 1 de Junio y volvemos el 6. "	self assert: (algoTrip obtenerDuracionEnDiasDelViaje: 'vacaciones-2018') equals: 6.! !!AlgoTripTest methodsFor: 'tests' stamp: 'LocaDesquiciada 4/29/2018 13:03'!test02ViajeVueloIdaDomestico
	| algoTrip costoEsperado |
	
	algoTrip := AlgoTrip new.
	algoTrip agregarCiudad: 'Buenos Aires' dePais: 'Argentina' conCodigo: 'BUE' latitud: -34.60 longitud: -58.38.
	algoTrip agregarCiudad: 'Cordoba' dePais: 'Argentina' conCodigo: 'COR' latitud: -31.42 longitud: -64.18.
	algoTrip crearViaje: 'vacaciones-2018'.
	algoTrip agregarVueloEnViaje: 'vacaciones-2018' de: 'BUE' a: 'COR' enFecha: '2018-6-1'.	
	" Costo: 1 peso por km para vuelos domesticos. La distancia se calcula con la formula del haversine. "	costoEsperado := 645.97 * 1.	self assert: ((algoTrip obtenerCostoDelViaje: 'vacaciones-2018') closeTo: costoEsperado precision: 0.001).
	" Duracion del viaje es un dia (el 1 de Junio que estamos volando). "	self assert: (algoTrip obtenerDuracionEnDiasDelViaje: 'vacaciones-2018') equals: 1.
! !TestCase subclass: #AsistenciaTest	instanceVariableNames: ''	classVariableNames: ''	poolDictionaries: ''	category: 'AlgoViajesTest'!!AsistenciaTest commentStamp: 'LocaDesquiciada 4/29/2018 17:00' prior: 0!Clase que testea la clase Asistencia.!AsistenciaTest subclass: #AsistHoteleraTest	instanceVariableNames: ''	classVariableNames: ''	poolDictionaries: ''	category: 'AlgoViajesTest'!!AsistHoteleraTest methodsFor: 'tests' stamp: 'LocaDesquiciada 4/29/2018 16:51'!test01AsistenciaHotelera	| asistencia |		asistencia := AsistHotelera new.		self assert: (asistencia costoAsistHotelera: 10) equals: 300.	! !AsistenciaTest subclass: #AsistVueloTest	instanceVariableNames: ''	classVariableNames: ''	poolDictionaries: ''	category: 'AlgoViajesTest'!!AsistVueloTest methodsFor: 'tests' stamp: 'LocaDesquiciada 4/29/2018 16:54'!test01AsistenciaDeVuelo	| asistencia |		asistencia := AsistDeVuelo new.		self assert: (asistencia costoAsistVuelo: 500) equals: 550.! !TestCase subclass: #CiudadTest	instanceVariableNames: ''	classVariableNames: ''	poolDictionaries: ''	category: 'AlgoViajesTest'!!CiudadTest commentStamp: 'LocaDesquiciada 4/29/2018 12:45' prior: 0!Clase que prueba el modelo de la ciudad.!!CiudadTest methodsFor: 'tests' stamp: 'LocaDesquiciada 4/27/2018 18:46'!test01CiudadLatitudYLongitudPerteneceAPais	| ciudad paisEsperado |		ciudad := Ciudad new.	ciudad inicializar: 'Buenos Aires' dePais: 'Argentina' conCodigo: 'BUE' latitud: -34.60 longitud: -58.38.		paisEsperado := 'Argentina'.	self assert: (ciudad obtenerPais ) equals: paisEsperado.	! !TestCase subclass: #HotelTest	instanceVariableNames: ''	classVariableNames: ''	poolDictionaries: ''	category: 'AlgoViajesTest'!!HotelTest commentStamp: 'LocaDesquiciada 4/29/2018 12:50' prior: 0!Clase que testea el funcionamiento del hotel.!!HotelTest methodsFor: 'tests' stamp: 'LocaDesquiciada 4/27/2018 10:27'!test01HotelCantMinimaDeNoches	| nuevoHotel |		nuevoHotel := Hotel new.		self assert: (nuevoHotel cantNochesHotel) equals: 1.! !!HotelTest methodsFor: 'tests' stamp: 'LocaDesquiciada 4/27/2018 10:27'!test03HotelPrecioPorNoche	| nuevoHotel |		nuevoHotel := Hotel new.	nuevoHotel inicializarHotel: 'Sheraton' en: 'BUE'  conPrecio: 1500.		self assert: (nuevoHotel precioHotelTotal) equals: 1500. ! !!HotelTest methodsFor: 'tests' stamp: 'LocaDesquiciada 4/27/2018 09:59'!test04HotelConNochesPrecioTotal	| nuevoHotel costoEsperado | 		nuevoHotel := Hotel new.	nuevoHotel inicializarHotel: 'Sheraton' en: 'BUE'  conPrecio: 1500.	nuevoHotel agregarCheckIn: '2018-8-1' yCheckOut: '2018-8-15'.		self assert: (nuevoHotel cantNochesHotel) equals: 14.		costoEsperado := 14 * 1500.	self assert: (nuevoHotel precioHotelTotal) equals: costoEsperado.! !!HotelTest methodsFor: 'tests' stamp: 'LocaDesquiciada 4/27/2018 09:46'!test02HotelConNoches	| nuevoHotel |		nuevoHotel := Hotel new.	nuevoHotel agregarCheckIn: '2018-9-1' yCheckOut: '2018-9-19'.		self assert: (nuevoHotel cantNochesHotel ) equals: 18.! !TestCase subclass: #PaqueteTest	instanceVariableNames: ''	classVariableNames: ''	poolDictionaries: ''	category: 'AlgoViajesTest'!!PaqueteTest commentStamp: 'LocaDesquiciada 4/29/2018 13:44' prior: 0!Clase que testea la clase paquete.Paquete completo := vuelo ida y vuelta + asistencia + comida especial + hotel.!!PaqueteTest methodsFor: 'tests' stamp: 'LocaDesquiciada 4/29/2018 17:32'!test07PaqueteVueloDomesticoCompleto	| paquete vueloIda vueloVuelta ciudad1 ciudad2 costoEsperado hotel costoHotel costoVuelo |		ciudad1 := Ciudad new.	ciudad1 inicializar: 'Berlín' dePais: 'Alemania' conCodigo: 'BER' latitud: 52.52 longitud: 13.40.		ciudad2 := Ciudad new.	ciudad2 inicializar: 'Munich' dePais: 'Alemania' conCodigo: 'MUN' latitud: 48.13 longitud: 11.58.	 	vueloIda  := Domestico new.	vueloIda  agregarSalida: ciudad1 yLlegada: ciudad2.	vueloVuelta := Domestico new.	vueloVuelta agregarSalida: ciudad2  yLlegada: ciudad1.		hotel := Hotel new.	hotel agregarCheckIn: '2019-9-19' yCheckOut: '2019-9-27'.	hotel inicializarHotel: 'Bayerischer Hof' en: 'MUN' conPrecio: 6000.		paquete := Paquete new.	paquete agregarNombre: 'Test 01'.	paquete agregarHotel: hotel.	paquete agregarVuelo: vueloIda enFecha: '2019-9-19'.	paquete agregarVuelo: vueloVuelta  enFecha: '2019-9-27'.	paquete agregarPlusComida.	paquete agregarAsist.	costoVuelo := 504.42 * 0.9 * 2.	costoHotel := 6000 * 0.8 * 8. 	costoEsperado := costoVuelo + costoHotel + 100.	self assert: ((paquete calcularCostoViaje) closeTo: costoEsperado precision: 0.001).		self assert: (paquete obtenerDiasViaje ) equals: 9.! !!PaqueteTest methodsFor: 'tests' stamp: 'LocaDesquiciada 4/29/2018 17:32'!test03PaqueteVueloDomesticoComidaEspecial	| paquete vueloVuelta vueloIda ciudad1 ciudad2 costoEsperado |		ciudad1 := Ciudad new.	ciudad1 inicializar: 'Berlín' dePais: 'Alemania' conCodigo: 'BER' latitud: 52.52 longitud: 13.40.		ciudad2 := Ciudad new.	ciudad2 inicializar: 'Munich' dePais: 'Alemania' conCodigo: 'MUN' latitud: 48.13 longitud: 11.58.	 	vueloIda := Domestico new.	vueloIda agregarSalida: ciudad1 yLlegada: ciudad2.	vueloVuelta:= Domestico new.	vueloVuelta agregarSalida: ciudad2 yLlegada: ciudad1.		paquete := Paquete new.	paquete agregarNombre: 'Test 01'.	paquete agregarVuelo: vueloIda enFecha: '2019-9-10'.	paquete agregarVuelo: vueloVuelta  enFecha: '2019-9-19'.	paquete agregarPlusComida.				costoEsperado := 504.42 * 0.9 * 2 + 100.	self assert: ((paquete calcularCostoViaje) closeTo: costoEsperado precision: 0.001).	self assert: (paquete obtenerDiasViaje) equals: 10.! !!PaqueteTest methodsFor: 'tests' stamp: 'LocaDesquiciada 4/29/2018 17:32'!test01PaqueteVueloDomestico	| paquete vueloVuelta vueloIda ciudad1 ciudad2 costoEsperado |		ciudad1 := Ciudad new.	ciudad1 inicializar: 'Berlín' dePais: 'Alemania' conCodigo: 'BER' latitud: 52.52 longitud: 13.40.		ciudad2 := Ciudad new.	ciudad2 inicializar: 'Munich' dePais: 'Alemania' conCodigo: 'MUN' latitud: 48.13 longitud: 11.58.	 	vueloIda := Domestico new.	vueloIda agregarSalida: ciudad1 yLlegada: ciudad2.	vueloVuelta:= Domestico new.	vueloVuelta agregarSalida: ciudad2 yLlegada: ciudad1.		paquete := Paquete new.	paquete agregarNombre: 'Test 01'.	paquete agregarVuelo: vueloIda enFecha: '2019-9-10'.	paquete agregarVuelo: vueloVuelta  enFecha: '2019-9-19'.				costoEsperado := 504.42 * 0.9 * 2.	self assert: ((paquete calcularCostoViaje) closeTo: costoEsperado precision: 0.001).	self assert: (paquete obtenerDiasViaje ) equals: 10.! !!PaqueteTest methodsFor: 'tests' stamp: 'LocaDesquiciada 4/29/2018 17:32'!test10PaqueteVueloInternacionalComidaEspecial	| paquete vueloVuelta vueloIda ciudad1 ciudad2 costoEsperado |		ciudad1 := Ciudad new.	ciudad1 inicializar: 'Esctocolmo' dePais: 'Suecia' conCodigo: 'EST' latitud: 59.32 longitud: 18.06.		ciudad2 := Ciudad new.	ciudad2 inicializar: 'Reikiavik' dePais: 'Islandia' conCodigo: 'REI' latitud: 64.12 longitud: -21.81.	vueloIda := Internacional new.	vueloIda agregarSalida: ciudad1 yLlegada: ciudad2.	vueloVuelta:= 	Internacional new.	vueloVuelta agregarSalida: ciudad2 yLlegada: ciudad1.		paquete := Paquete new.	paquete agregarNombre: 'Test 01'.	paquete agregarVuelo: vueloIda enFecha: '2019-9-10'.	paquete agregarVuelo: vueloVuelta  enFecha: '2019-9-19'.	paquete agregarPlusComida.				costoEsperado := 2130 * 1.5 * 1.05 * 2 * 0.9 + 100.	self assert: ((paquete calcularCostoViaje) closeTo: costoEsperado precision: 0.001).	self assert: (paquete obtenerDiasViaje) equals: 10.	! !!PaqueteTest methodsFor: 'tests' stamp: 'LocaDesquiciada 4/29/2018 18:33'!test12PaqueteVueloInternacionalConHotelYAsistencia	| paquete vueloVuelta vueloIda ciudad1 ciudad2 costoEsperado hotel costoHotel costoVuelo |		ciudad1 := Ciudad new.	ciudad1 inicializar: 'Esctocolmo' dePais: 'Suecia' conCodigo: 'EST' latitud: 59.32 longitud: 18.06.		ciudad2 := Ciudad new.	ciudad2 inicializar: 'Reikiavik' dePais: 'Islandia' conCodigo: 'REI' latitud: 64.12 longitud: -21.81.	vueloIda := Internacional new.	vueloIda agregarSalida: ciudad1 yLlegada: ciudad2.	vueloVuelta:= 	Internacional new.	vueloVuelta agregarSalida: ciudad2 yLlegada: ciudad1.		hotel := Hotel new.	hotel agregarCheckIn: '2019-9-19' yCheckOut: '2019-9-27'.	hotel inicializarHotel: 'Hilton Reykjavik Nordica' en: 'REI' conPrecio: 4000.		paquete := Paquete new.	paquete agregarNombre: 'Test 01'.	paquete agregarVuelo: vueloIda enFecha: '2019-9-10'.	paquete agregarVuelo: vueloVuelta  enFecha: '2019-9-19'.	paquete agregarHotel: hotel.		costoHotel := 4000 * 8 * 0.8.	costoVuelo := 2130 * 1.5 * 2 * 1.05 * 0.9 .	costoEsperado := costoHotel + costoVuelo.	self assert: ((paquete calcularCostoViaje) closeTo: costoEsperado precision: 0.001).		self assert: (paquete obtenerDiasViaje) equals: 10.! !!PaqueteTest methodsFor: 'tests' stamp: 'LocaDesquiciada 4/29/2018 17:32'!test13PaqueteVueloInternacionalConHotelYComidaEspecial| paquete vueloVuelta vueloIda ciudad1 ciudad2 costoEsperado hotel costoHotel costoVuelo |		ciudad1 := Ciudad new.	ciudad1 inicializar: 'Esctocolmo' dePais: 'Suecia' conCodigo: 'EST' latitud: 59.32 longitud: 18.06.		ciudad2 := Ciudad new.	ciudad2 inicializar: 'Reikiavik' dePais: 'Islandia' conCodigo: 'REI' latitud: 64.12 longitud: -21.81.	vueloIda := Internacional new.	vueloIda agregarSalida: ciudad1 yLlegada: ciudad2.	vueloVuelta:= 	Internacional new.	vueloVuelta agregarSalida: ciudad2 yLlegada: ciudad1.		hotel := Hotel new.	hotel agregarCheckIn: '2019-9-19' yCheckOut: '2019-9-27'.	hotel inicializarHotel: 'Hilton Reykjavik Nordica' en: 'REI' conPrecio: 4000.		paquete := Paquete new.	paquete agregarNombre: 'Test 01'.	paquete agregarVuelo: vueloIda enFecha: '2019-9-10'.	paquete agregarVuelo: vueloVuelta  enFecha: '2019-9-19'.	paquete agregarHotel: hotel.	paquete agregarPlusComida.		costoHotel := 4000 * 8 * 0.8.	costoVuelo := 2130 * 1.5 * 2 * 1.05 * 0.9.	costoEsperado := costoHotel + costoVuelo + 100.	self assert: ((paquete calcularCostoViaje) closeTo: costoEsperado precision: 0.001).		self assert: (paquete obtenerDiasViaje) equals: 10.! !!PaqueteTest methodsFor: 'tests' stamp: 'LocaDesquiciada 4/29/2018 17:32'!test09PaqueteVueloInternacionalAsistencia	| paquete vueloVuelta vueloIda ciudad1 ciudad2 costoEsperado |		ciudad1 := Ciudad new.	ciudad1 inicializar: 'Esctocolmo' dePais: 'Suecia' conCodigo: 'EST' latitud: 59.32 longitud: 18.06.		ciudad2 := Ciudad new.	ciudad2 inicializar: 'Reikiavik' dePais: 'Islandia' conCodigo: 'REI' latitud: 64.12 longitud: -21.81.	vueloIda := Internacional new.	vueloIda agregarSalida: ciudad1 yLlegada: ciudad2.	vueloVuelta:= 	Internacional new.	vueloVuelta agregarSalida: ciudad2 yLlegada: ciudad1.		paquete := Paquete new.	paquete agregarNombre: 'Test 01'.	paquete agregarVuelo: vueloIda enFecha: '2019-9-10'.	paquete agregarVuelo: vueloVuelta  enFecha: '2019-9-19'. 	paquete agregarAsist.				costoEsperado := 2130 * 1.5 * 1.05 * 2 * 0.9.	self assert: ((paquete calcularCostoViaje) closeTo: costoEsperado precision: 0.001).	self assert: (paquete obtenerDiasViaje) equals: 10.! !!PaqueteTest methodsFor: 'tests' stamp: 'LocaDesquiciada 4/29/2018 17:32'!test06PaqueteVueloDomesticoConHotelYComidaEspecial	| paquete vueloIda vueloVuelta ciudad1 ciudad2 costoEsperado hotel costoHotel costoVuelo |		ciudad1 := Ciudad new.	ciudad1 inicializar: 'Berlín' dePais: 'Alemania' conCodigo: 'BER' latitud: 52.52 longitud: 13.40.		ciudad2 := Ciudad new.	ciudad2 inicializar: 'Munich' dePais: 'Alemania' conCodigo: 'MUN' latitud: 48.13 longitud: 11.58.	 	vueloIda  := Domestico new.	vueloIda  agregarSalida: ciudad1 yLlegada: ciudad2.	vueloVuelta := Domestico new.	vueloVuelta agregarSalida: ciudad2  yLlegada: ciudad1.		hotel := Hotel new.	hotel agregarCheckIn: '2019-9-19' yCheckOut: '2019-9-27'.	hotel inicializarHotel: 'Bayerischer Hof' en: 'MUN' conPrecio: 6000.		paquete := Paquete new.	paquete agregarNombre: 'Test 01'.	paquete agregarHotel: hotel.	paquete agregarVuelo: vueloIda enFecha: '2019-9-19'.	paquete agregarVuelo: vueloVuelta  enFecha: '2019-9-27'.	paquete agregarPlusComida.	costoVuelo := 504.42 * 0.9 * 2.	costoHotel := 6000 * 0.8 * 8. 	costoEsperado := costoVuelo + costoHotel + 100.	self assert: ((paquete calcularCostoViaje) closeTo: costoEsperado precision: 0.001).		self assert: (paquete obtenerDiasViaje ) equals: 9.! !!PaqueteTest methodsFor: 'tests' stamp: 'LocaDesquiciada 4/29/2018 17:32'!test11PaqueteVueloInternacionalConHotel	| paquete vueloVuelta vueloIda ciudad1 ciudad2 costoEsperado hotel costoHotel costoVuelo |		ciudad1 := Ciudad new.	ciudad1 inicializar: 'Esctocolmo' dePais: 'Suecia' conCodigo: 'EST' latitud: 59.32 longitud: 18.06.		ciudad2 := Ciudad new.	ciudad2 inicializar: 'Reikiavik' dePais: 'Islandia' conCodigo: 'REI' latitud: 64.12 longitud: -21.81.	vueloIda := Internacional new.	vueloIda agregarSalida: ciudad1 yLlegada: ciudad2.	vueloVuelta:= 	Internacional new.	vueloVuelta agregarSalida: ciudad2 yLlegada: ciudad1.		hotel := Hotel new.	hotel agregarCheckIn: '2019-9-19' yCheckOut: '2019-9-27'.	hotel inicializarHotel: 'Hilton Reykjavik Nordica' en: 'REI' conPrecio: 4000.		paquete := Paquete new.	paquete agregarNombre: 'Test 01'.	paquete agregarVuelo: vueloIda enFecha: '2019-9-10'.	paquete agregarVuelo: vueloVuelta  enFecha: '2019-9-19'.	paquete agregarHotel: hotel.		costoHotel := 4000 * 8 * 0.8.	costoVuelo := 2130 * 1.5 * 2 * 1.05 * 0.9.	costoEsperado := costoHotel + costoVuelo.	self assert: ((paquete calcularCostoViaje) closeTo: costoEsperado precision: 0.001).		self assert: (paquete obtenerDiasViaje) equals: 10.! !!PaqueteTest methodsFor: 'tests' stamp: 'LocaDesquiciada 4/29/2018 17:32'!test04PaqueteVueloDomesticoConHotel	| paquete vueloIda vueloVuelta ciudad1 ciudad2 costoEsperado hotel costoHotel costoVuelo |		ciudad1 := Ciudad new.	ciudad1 inicializar: 'Berlín' dePais: 'Alemania' conCodigo: 'BER' latitud: 52.52 longitud: 13.40.		ciudad2 := Ciudad new.	ciudad2 inicializar: 'Munich' dePais: 'Alemania' conCodigo: 'MUN' latitud: 48.13 longitud: 11.58.	 	vueloIda  := Domestico new.	vueloIda  agregarSalida: ciudad1 yLlegada: ciudad2.	vueloVuelta := Domestico new.	vueloVuelta agregarSalida: ciudad2  yLlegada: ciudad1.		hotel := Hotel new.	hotel inicializarHotel: 'Bayerischer Hof' en: 'MUN' conPrecio: 6000.	hotel agregarCheckIn: '2019-9-19' yCheckOut: '2019-9-27'.		paquete := Paquete new.	paquete agregarNombre: 'Test 01'.	paquete agregarHotel: hotel.	paquete agregarVuelo: vueloIda enFecha: '2019-9-19'.	paquete agregarVuelo: vueloVuelta  enFecha: '2019-9-27'.	costoVuelo := 504.42 * 0.9 * 2.	costoHotel := 6000 * 0.8 * 8. 	costoEsperado := costoVuelo + costoHotel.	self assert: ((paquete calcularCostoViaje) closeTo: costoEsperado precision: 0.001).		self assert: (paquete obtenerDiasViaje ) equals: 9.! !!PaqueteTest methodsFor: 'tests' stamp: 'LocaDesquiciada 4/29/2018 17:32'!test02PaqueteVueloDomesticoAsistencia	| paquete vueloVuelta vueloIda ciudad1 ciudad2 costoEsperado |		ciudad1 := Ciudad new.	ciudad1 inicializar: 'Berlín' dePais: 'Alemania' conCodigo: 'BER' latitud: 52.52 longitud: 13.40.		ciudad2 := Ciudad new.	ciudad2 inicializar: 'Munich' dePais: 'Alemania' conCodigo: 'MUN' latitud: 48.13 longitud: 11.58.	 	vueloIda := Domestico new.	vueloIda agregarSalida: ciudad1 yLlegada: ciudad2.	vueloVuelta:= Domestico new.	vueloVuelta agregarSalida: ciudad2 yLlegada: ciudad1.		paquete := Paquete new.	paquete agregarNombre: 'Test 01'.	paquete agregarVuelo: vueloIda enFecha: '2019-9-10'.	paquete agregarVuelo: vueloVuelta  enFecha: '2019-9-19'.	paquete agregarAsist.				costoEsperado := 504.42 * 0.9 * 2.	self assert: ((paquete calcularCostoViaje) closeTo: costoEsperado precision: 0.001).	self assert: (paquete obtenerDiasViaje) equals: 10.! !!PaqueteTest methodsFor: 'tests' stamp: 'LocaDesquiciada 4/29/2018 17:32'!test14PaqueteVueloInternacionalCompleto	| paquete vueloVuelta vueloIda ciudad1 ciudad2 costoEsperado hotel costoHotel costoVuelo |		ciudad1 := Ciudad new.	ciudad1 inicializar: 'Esctocolmo' dePais: 'Suecia' conCodigo: 'EST' latitud: 59.32 longitud: 18.06.		ciudad2 := Ciudad new.	ciudad2 inicializar: 'Reikiavik' dePais: 'Islandia' conCodigo: 'REI' latitud: 64.12 longitud: -21.81.	vueloIda := Internacional new.	vueloIda agregarSalida: ciudad1 yLlegada: ciudad2.	vueloVuelta:= 	Internacional new.	vueloVuelta agregarSalida: ciudad2 yLlegada: ciudad1.		hotel := Hotel new.	hotel agregarCheckIn: '2019-9-19' yCheckOut: '2019-9-27'.	hotel inicializarHotel: 'Hilton Reykjavik Nordica' en: 'REI' conPrecio: 4000.		paquete := Paquete new.	paquete agregarNombre: 'Test 01'.	paquete agregarVuelo: vueloIda enFecha: '2019-9-10'.	paquete agregarVuelo: vueloVuelta  enFecha: '2019-9-19'.	paquete agregarHotel: hotel.	paquete agregarAsist.	paquete agregarPlusComida.		costoHotel := 4000 * 8 * 0.8.	costoVuelo := 2130 * 1.5 * 2 * 1.05 * 0.9.	costoEsperado := costoHotel + costoVuelo + 100.	self assert: ((paquete calcularCostoViaje) closeTo: costoEsperado precision: 0.001).		self assert: (paquete obtenerDiasViaje) equals: 10.! !!PaqueteTest methodsFor: 'tests' stamp: 'LocaDesquiciada 4/29/2018 17:32'!test05PaqueteVueloDomesticoConHotelYAsistencia	| paquete vueloIda vueloVuelta ciudad1 ciudad2 costoEsperado hotel costoHotel costoVuelo |		ciudad1 := Ciudad new.	ciudad1 inicializar: 'Berlín' dePais: 'Alemania' conCodigo: 'BER' latitud: 52.52 longitud: 13.40.		ciudad2 := Ciudad new.	ciudad2 inicializar: 'Munich' dePais: 'Alemania' conCodigo: 'MUN' latitud: 48.13 longitud: 11.58.	 	vueloIda  := Domestico new.	vueloIda  agregarSalida: ciudad1 yLlegada: ciudad2.	vueloVuelta := Domestico new.	vueloVuelta agregarSalida: ciudad2  yLlegada: ciudad1.		hotel := Hotel new.	hotel agregarCheckIn: '2019-9-19' yCheckOut: '2019-9-27'.	hotel inicializarHotel: 'Bayerischer Hof' en: 'MUN' conPrecio: 6000.		paquete := Paquete new.	paquete agregarNombre: 'Test 01'.	paquete agregarHotel: hotel.	paquete agregarVuelo: vueloIda enFecha: '2019-9-19'.	paquete agregarVuelo: vueloVuelta  enFecha: '2019-9-27'.	paquete agregarAsist.	costoVuelo := 504.42 * 0.9 * 2.	costoHotel := 6000 * 0.8 * 8. 	costoEsperado := costoVuelo + costoHotel.	self assert: ((paquete calcularCostoViaje) closeTo: costoEsperado precision: 0.001).		self assert: (paquete obtenerDiasViaje ) equals: 9.! !!PaqueteTest methodsFor: 'tests' stamp: 'LocaDesquiciada 4/29/2018 17:32'!test08PaqueteVueloInternacional	| paquete vueloVuelta vueloIda ciudad1 ciudad2 costoEsperado |		ciudad1 := Ciudad new.	ciudad1 inicializar: 'Esctocolmo' dePais: 'Suecia' conCodigo: 'EST' latitud: 59.32 longitud: 18.06.		ciudad2 := Ciudad new.	ciudad2 inicializar: 'Reikiavik' dePais: 'Islandia' conCodigo: 'REI' latitud: 64.12 longitud: -21.81.	vueloIda := Internacional new.	vueloIda agregarSalida: ciudad1 yLlegada: ciudad2.	vueloVuelta:= 	Internacional new.	vueloVuelta agregarSalida: ciudad2 yLlegada: ciudad1.		paquete := Paquete new.	paquete agregarNombre: 'Test 01'.	paquete agregarVuelo: vueloIda enFecha: '2019-9-10'.	paquete agregarVuelo: vueloVuelta  enFecha: '2019-9-19'.				costoEsperado := 2130 * 1.5 * 1.05 * 2 * 0.9.	self assert: ((paquete calcularCostoViaje) closeTo: costoEsperado precision: 0.001).	self assert: (paquete obtenerDiasViaje) equals: 10.! !TestCase subclass: #ViajeTest	instanceVariableNames: ''	classVariableNames: ''	poolDictionaries: ''	category: 'AlgoViajesTest'!!ViajeTest commentStamp: 'LocaDesquiciada 4/29/2018 13:15' prior: 0!Clase que testea el viaje.Viaje completo := hotel + asistencia + vuelo ida y vuelta + comida especial.!!ViajeTest methodsFor: 'tests' stamp: 'LocaDesquiciada 4/30/2018 20:21'!test18ViajeConHotel	| hotel  viaje costoEsperado |		viaje := Viaje new.		hotel := Hotel new.	hotel inicializarHotel: 'Hilton Reykjavik Nordica' en: 'REI' conPrecio: 4000.	hotel agregarCheckIn: '2018-9-20' yCheckOut: '2018-9-27'.		viaje agregarHotel: hotel.		costoEsperado := 4000 * 7.	self assert: (viaje obtenerDiasViaje) equals: 8.	self assert: ((viaje calcularCostoViaje) closeTo: costoEsperado precision: 0.001).! !!ViajeTest methodsFor: 'tests' stamp: 'LocaDesquiciada 4/30/2018 20:21'!test14ViajeVueloIdaYVueltaInternacional	| viaje vueloVuelta vueloIda ciudad1 ciudad2 costoEsperado |	 	ciudad1 := Ciudad new.	ciudad1 inicializar: 'Esctocolmo' dePais: 'Suecia' conCodigo: 'EST' latitud: 59.32 longitud: 18.06.		ciudad2 := Ciudad new.	ciudad2 inicializar: 'Reikiavik' dePais: 'Islandia' conCodigo: 'REI' latitud: 64.12 longitud: -21.81.	vueloIda := Internacional new.	vueloIda agregarSalida: ciudad1 yLlegada: ciudad2.	vueloVuelta:= 	Internacional new.	vueloVuelta agregarSalida: ciudad2 yLlegada: ciudad1.		viaje := Viaje new.	viaje agregarNombre: 'Spring Break'.	viaje agregarVuelo: vueloIda enFecha: '2019-9-10'.	viaje agregarVuelo: vueloVuelta  enFecha: '2019-9-19'.				costoEsperado := 2130 * 1.5 * 1.05 * 2.	self assert: ((viaje calcularCostoViaje) closeTo: costoEsperado precision: 0.001).	self assert: (viaje obtenerDiasViaje) equals: 10.! !!ViajeTest methodsFor: 'tests' stamp: 'LocaDesquiciada 4/29/2018 18:57'!test21ViajeCompletoInternacional| viaje vueloVuelta vueloIda ciudad1 ciudad2 costoEsperado |		ciudad1 := Ciudad new.	ciudad1 inicializar: 'Esctocolmo' dePais: 'Suecia' conCodigo: 'EST' latitud: 59.32 longitud: 18.06.		ciudad2 := Ciudad new.	ciudad2 inicializar: 'Reikiavik' dePais: 'Islandia' conCodigo: 'REI' latitud: 64.12 longitud: -21.81.	vueloIda := Internacional new.	vueloIda agregarSalida: ciudad1 yLlegada: ciudad2.	vueloVuelta:= 	Internacional new.	vueloVuelta agregarSalida: ciudad2 yLlegada: ciudad1.		viaje := Paquete new.	viaje agregarNombre: 'Spring Break'.	viaje agregarVuelo: vueloIda enFecha: '2019-9-10'.	viaje agregarVuelo: vueloVuelta  enFecha: '2019-9-19'.				costoEsperado := 2130 * 1.5 * 1.05 * 2 * 0.9.	self assert: ((viaje calcularCostoViaje) closeTo: costoEsperado precision: 0.001).	self assert: (viaje obtenerDiasViaje) equals: 10.! !!ViajeTest methodsFor: 'tests' stamp: 'LocaDesquiciada 4/30/2018 20:21'!test16ViajeVueloIdaYVueltaInternacionalYComidaEspecial| viaje vueloVuelta vueloIda ciudad1 ciudad2 costoEsperado |		ciudad1 := Ciudad new.	ciudad1 inicializar: 'Esctocolmo' dePais: 'Suecia' conCodigo: 'EST' latitud: 59.32 longitud: 18.06.		ciudad2 := Ciudad new.	ciudad2 inicializar: 'Reikiavik' dePais: 'Islandia' conCodigo: 'REI' latitud: 64.12 longitud: -21.81.	vueloIda := Internacional new.	vueloIda agregarSalida: ciudad1 yLlegada: ciudad2.	vueloVuelta:= 	Internacional new.	vueloVuelta agregarSalida: ciudad2 yLlegada: ciudad1.		viaje := Viaje new.	viaje agregarNombre: 'Spring Break'.	viaje agregarVuelo: vueloIda enFecha: '2019-9-10'.	viaje agregarVuelo: vueloVuelta  enFecha: '2019-9-19'.	viaje agregarPlusComida.				costoEsperado := (2130 * 1.5 * 1.05 * 2) + 100. 	self assert: ((viaje calcularCostoViaje) closeTo: costoEsperado precision: 0.001).	self assert: (viaje obtenerDiasViaje) equals: 10.! !!ViajeTest methodsFor: 'tests' stamp: 'LocaDesquiciada 4/30/2018 20:21'!test15ViajeVueloIdaYVueltaInternacionalYAsistencia	| viaje vueloVuelta vueloIda ciudad1 ciudad2 costoEsperado | 		ciudad1 := Ciudad new.	ciudad1 inicializar: 'Esctocolmo' dePais: 'Suecia' conCodigo: 'EST' latitud: 59.32 longitud: 18.06.		ciudad2 := Ciudad new.	ciudad2 inicializar: 'Reikiavik' dePais: 'Islandia' conCodigo: 'REI' latitud: 64.12 longitud: -21.81.	vueloIda := Internacional new.	vueloIda agregarSalida: ciudad1 yLlegada: ciudad2.	vueloVuelta:= Internacional new.	vueloVuelta agregarSalida: ciudad2 yLlegada: ciudad1.		viaje := Viaje new.	viaje agregarNombre: 'Spring Break'.	viaje agregarVuelo: vueloIda enFecha: '2019-9-10'.	viaje agregarVuelo: vueloVuelta  enFecha: '2019-9-19'.	viaje agregarAsist.				costoEsperado := ( 2130 * 1.5 * 1.05 * 2 * 1.1).	self assert: ((viaje calcularCostoViaje) closeTo: costoEsperado precision: 0.001).	self assert: (viaje obtenerDiasViaje) equals: 10.! !!ViajeTest methodsFor: 'tests' stamp: 'LocaDesquiciada 4/30/2018 20:22'!test04ViajeVueloIdaDomesticoYComidaEspecial	| viaje ciudad1 ciudad2 costoEsperado vueloIda |	 	viaje := Viaje new.	viaje agregarNombre: 'Spring Break'.		ciudad1 := Ciudad new.	ciudad1 inicializar: 'Berlín' dePais: 'Alemania' conCodigo: 'BER' latitud: 52.52 longitud: 13.40.		ciudad2 := Ciudad new.	ciudad2 inicializar: 'Munich' dePais: 'Alemania' conCodigo: 'MUN' latitud: 48.13 longitud: 11.58.	 	vueloIda := Domestico new.	vueloIda agregarSalida: ciudad1 yLlegada: ciudad2.		viaje agregarVuelo: vueloIda enFecha: '2018-9-19'.	viaje agregarPlusComida.		costoEsperado := 504.42 + 100.	self assert: ((viaje calcularCostoViaje) closeTo: costoEsperado precision: 0.001). ! !!ViajeTest methodsFor: 'tests' stamp: 'LocaDesquiciada 4/30/2018 20:21'!test11ViajeVueloIdaInternacionalYAsistencia	| viaje vueloIda ciudad1 ciudad2 costoEsperado | 		ciudad1 := Ciudad new.	ciudad1 inicializar: 'Esctocolmo' dePais: 'Suecia' conCodigo: 'EST' latitud: 59.32 longitud: 18.06.		ciudad2 := Ciudad new.	ciudad2 inicializar: 'Reikiavik' dePais: 'Islandia' conCodigo: 'REI' latitud: 64.12 longitud: -21.81.	vueloIda := Internacional new.	vueloIda agregarSalida: ciudad1 yLlegada: ciudad2.		viaje := Viaje new.	viaje agregarNombre: 'Test 01'.	viaje agregarVuelo: vueloIda enFecha: '2019-9-10'.	viaje agregarAsist.				costoEsperado := (2130 * 1.5 * 1.05 * 1.1).	self assert: ((viaje calcularCostoViaje) closeTo: costoEsperado precision: 0.001).! !!ViajeTest methodsFor: 'tests' stamp: 'LocaDesquiciada 4/29/2018 18:56'!test17ViajeVueloIdaYVueltaInternacionalYHotel| viaje vueloVuelta vueloIda ciudad1 ciudad2 costoEsperado |		ciudad1 := Ciudad new.	ciudad1 inicializar: 'Esctocolmo' dePais: 'Suecia' conCodigo: 'EST' latitud: 59.32 longitud: 18.06.		ciudad2 := Ciudad new.	ciudad2 inicializar: 'Reikiavik' dePais: 'Islandia' conCodigo: 'REI' latitud: 64.12 longitud: -21.81.	vueloIda := Internacional new.	vueloIda agregarSalida: ciudad1 yLlegada: ciudad2.	vueloVuelta:= 	Internacional new.	vueloVuelta agregarSalida: ciudad2 yLlegada: ciudad1.		viaje := Paquete new.	viaje agregarNombre: 'Spring Break'.	viaje agregarVuelo: vueloIda enFecha: '2019-9-10'.	viaje agregarVuelo: vueloVuelta  enFecha: '2019-9-19'.				costoEsperado := 2130 * 1.5 * 1.05 * 2 * 0.9.	self assert: ((viaje calcularCostoViaje) closeTo: costoEsperado precision: 0.001).	self assert: (viaje obtenerDiasViaje) equals: 10.! !!ViajeTest methodsFor: 'tests' stamp: 'LocaDesquiciada 4/30/2018 20:21'!test20ViajeCompletoDomestico	| viaje vueloVuelta vueloIda ciudad1 ciudad2 costoEsperado hotel |		ciudad1 := Ciudad new.	ciudad1 inicializar: 'Berlín' dePais: 'Alemania' conCodigo: 'BER' latitud: 52.52 longitud: 13.40.		ciudad2 := Ciudad new.	ciudad2 inicializar: 'Munich' dePais: 'Alemania' conCodigo: 'MUN' latitud: 48.13 longitud: 11.58.	 	vueloIda := Domestico new.	vueloIda agregarSalida: ciudad1 yLlegada: ciudad2.	vueloVuelta:= Domestico new.	vueloVuelta agregarSalida: ciudad2 yLlegada: ciudad1.		viaje := Viaje new.	viaje agregarNombre: 'Test 01'.	viaje agregarVuelo: vueloIda enFecha: '2019-9-10'.	viaje agregarVuelo: vueloVuelta  enFecha: '2019-9-19'.		hotel := Hotel new.	hotel inicializarHotel: 'Quiero estar en alemania' en: 'MUN' conPrecio: 4000.	hotel agregarCheckIn: '2019-9-10' yCheckOut: '2019-9-19'.		viaje agregarHotel: hotel.	viaje agregarAsist.	viaje agregarPlusComida.		costoEsperado := (4000 * 9) + 100 + (504.42 * 2 * 1.1) + (30 * 9).	self assert: (viaje obtenerDiasViaje) equals: 10.	self assert: ((viaje calcularCostoViaje) closeTo: costoEsperado precision: 0.001).! !!ViajeTest methodsFor: 'tests' stamp: 'LocaDesquiciada 4/30/2018 20:06'!test02ViajeVueloIdaDomestico	| viaje ciudad1 ciudad2 costoEsperado vueloIda |		viaje := Viaje new.	viaje agregarNombre: 'Spring Break'.		ciudad1 := Ciudad new.	ciudad1 inicializar: 'Berlín' dePais: 'Alemania' conCodigo: 'BER' latitud: 52.52 longitud: 13.40.		ciudad2 := Ciudad new.	ciudad2 inicializar: 'Munich' dePais: 'Alemania' conCodigo: 'MUN' latitud: 48.13 longitud: 11.58.	 	vueloIda := Domestico new.	vueloIda agregarSalida: ciudad1 yLlegada: ciudad2.		viaje agregarVuelo: vueloIda enFecha: '2018-9-19'.		costoEsperado := 504.42 .	self assert: ((viaje calcularCostoViaje) closeTo: costoEsperado precision: 0.001). ! !!ViajeTest methodsFor: 'tests' stamp: 'LocaDesquiciada 4/30/2018 20:21'!test12ViajeVueloIdaInternacionalYComidaEspecial	| viaje vueloIda ciudad1 ciudad2 costoEsperado | 		ciudad1 := Ciudad new.	ciudad1 inicializar: 'Esctocolmo' dePais: 'Suecia' conCodigo: 'EST' latitud: 59.32 longitud: 18.06.		ciudad2 := Ciudad new.	ciudad2 inicializar: 'Reikiavik' dePais: 'Islandia' conCodigo: 'REI' latitud: 64.12 longitud: -21.81.	vueloIda := Internacional new.	vueloIda agregarSalida: ciudad1 yLlegada: ciudad2.		viaje := Viaje new.	viaje agregarNombre: 'Test 01'.	viaje agregarVuelo: vueloIda enFecha: '2019-9-10'.	viaje agregarPlusComida.				costoEsperado := 2130 * 1.5 * 1.05 + 100.	self assert: ((viaje calcularCostoViaje) closeTo: costoEsperado precision: 0.001).! !!ViajeTest methodsFor: 'tests' stamp: 'LocaDesquiciada 4/30/2018 20:22'!test07ViajeVueloIdaYVueltaDomesticoYAsistencia	| viaje vueloVuelta vueloIda ciudad1 ciudad2 costoEsperado | 		ciudad1 := Ciudad new.	ciudad1 inicializar: 'Berlín' dePais: 'Alemania' conCodigo: 'BER' latitud: 52.52 longitud: 13.40.		ciudad2 := Ciudad new.	ciudad2 inicializar: 'Munich' dePais: 'Alemania' conCodigo: 'MUN' latitud: 48.13 longitud: 11.58.	 	vueloIda := Domestico new.	vueloIda agregarSalida: ciudad1 yLlegada: ciudad2.	vueloVuelta:= Domestico new.	vueloVuelta agregarSalida: ciudad2 yLlegada: ciudad1.		viaje := Viaje new.	viaje agregarNombre: 'Test 01'.	viaje agregarVuelo: vueloIda enFecha: '2019-9-10'.	viaje agregarVuelo: vueloVuelta  enFecha: '2019-9-19'.	viaje agregarAsist.					costoEsperado := (504.42 * 2 * 1.1).	self assert: ((viaje calcularCostoViaje) closeTo: costoEsperado precision: 0.001).	self assert: (viaje obtenerDiasViaje) equals: 10.! !!ViajeTest methodsFor: 'tests' stamp: 'LocaDesquiciada 4/30/2018 20:25'!test05ViajeVueloIdaDomesticoYHotel	| viaje ciudad1 ciudad2 costoEsperado vueloIda hotel |	 	viaje := Viaje new.	viaje agregarNombre: 'Spring Break'.		ciudad1 := Ciudad new.	ciudad1 inicializar: 'Berlín' dePais: 'Alemania' conCodigo: 'BER' latitud: 52.52 longitud: 13.40.		ciudad2 := Ciudad new.	ciudad2 inicializar: 'Munich' dePais: 'Alemania' conCodigo: 'MUN' latitud: 48.13 longitud: 11.58.	 	vueloIda := Domestico new.	vueloIda agregarSalida: ciudad1 yLlegada: ciudad2.		hotel := Hotel new.	hotel inicializarHotel: 'Quiero estar en alemania' en: 'MUN' conPrecio: 4000.	hotel agregarCheckIn: '2019-9-10' yCheckOut: '2019-9-19'.		viaje agregarHotel: hotel.	viaje agregarVuelo: vueloIda enFecha: '2018-9-19'.		costoEsperado := 504.42 + (9 * 4000) .	self assert: ((viaje calcularCostoViaje) closeTo: costoEsperado precision: 0.001). 	self assert: (viaje obtenerDiasViaje) equals: 10.! !!ViajeTest methodsFor: 'tests' stamp: 'LocaDesquiciada 4/30/2018 20:22'!test08ViajeVueloIdaYVueltaDomesticoYComidaEspecial	| viaje vueloVuelta vueloIda ciudad1 ciudad2 costoEsperado |	 	ciudad1 := Ciudad new.	ciudad1 inicializar: 'Berlín' dePais: 'Alemania' conCodigo: 'BER' latitud: 52.52 longitud: 13.40.		ciudad2 := Ciudad new.	ciudad2 inicializar: 'Munich' dePais: 'Alemania' conCodigo: 'MUN' latitud: 48.13 longitud: 11.58.	 	vueloIda := Domestico new.	vueloIda agregarSalida: ciudad1 yLlegada: ciudad2.	vueloVuelta:= Domestico new.	vueloVuelta agregarSalida: ciudad2 yLlegada: ciudad1.		viaje := Viaje new.	viaje agregarNombre: 'Test 01'.	viaje agregarVuelo: vueloIda enFecha: '2019-9-10'.	viaje agregarVuelo: vueloVuelta  enFecha: '2019-9-19'.	viaje agregarPlusComida.					costoEsperado := 504.42 * 2 + 100.	self assert: ((viaje calcularCostoViaje) closeTo: costoEsperado precision: 0.001).	self assert: (viaje obtenerDiasViaje) equals: 10.! !!ViajeTest methodsFor: 'tests' stamp: 'LocaDesquiciada 4/30/2018 20:05'!test01ViajeVacio	| viaje |		viaje := Viaje new.	viaje agregarNombre: 'Spring Break'.		self assert: (viaje calcularCostoViaje) closeTo: 0.	self assert: (viaje obtenerDiasViaje) equals: 0.! !!ViajeTest methodsFor: 'tests' stamp: 'LocaDesquiciada 4/30/2018 20:21'!test19ViajeConHotelyAsistencia	| hotel  viaje costoEsperado |		viaje := Viaje new.		hotel := Hotel new.	hotel inicializarHotel: 'Hilton Reykjavik Nordica' en: 'REI' conPrecio: 4000.	hotel agregarCheckIn: '2018-9-20' yCheckOut: '2018-9-27'.		viaje agregarHotel: hotel.	viaje agregarAsist.		costoEsperado := 4000 * 7 + (30 * 7).	self assert: (viaje obtenerDiasViaje) equals: 8.	self assert: ((viaje calcularCostoViaje) closeTo: costoEsperado precision: 0.001).! !!ViajeTest methodsFor: 'tests' stamp: 'LocaDesquiciada 4/30/2018 20:22'!test06ViajeVueloIdaYVueltaDomestico	| viaje vueloVuelta vueloIda ciudad1 ciudad2 costoEsperado |	 	ciudad1 := Ciudad new.	ciudad1 inicializar: 'Berlín' dePais: 'Alemania' conCodigo: 'BER' latitud: 52.52 longitud: 13.40.		ciudad2 := Ciudad new.	ciudad2 inicializar: 'Munich' dePais: 'Alemania' conCodigo: 'MUN' latitud: 48.13 longitud: 11.58.	 	vueloIda := Domestico new.	vueloIda agregarSalida: ciudad1 yLlegada: ciudad2.	vueloVuelta:= Domestico new.	vueloVuelta agregarSalida: ciudad2 yLlegada: ciudad1.		viaje := Viaje new.	viaje agregarNombre: 'Test 01'.	viaje agregarVuelo: vueloIda enFecha: '2019-9-10'.	viaje agregarVuelo: vueloVuelta  enFecha: '2019-9-19'.					costoEsperado := 504.42 * 2.	self assert: ((viaje calcularCostoViaje) closeTo: costoEsperado precision: 0.001).	self assert: (viaje obtenerDiasViaje) equals: 10.! !!ViajeTest methodsFor: 'tests' stamp: 'LocaDesquiciada 4/30/2018 20:21'!test09ViajeVueloIdaYVueltaDomesticoYHotel	| viaje vueloVuelta vueloIda ciudad1 ciudad2 costoEsperado hotel |	 	ciudad1 := Ciudad new.	ciudad1 inicializar: 'Berlín' dePais: 'Alemania' conCodigo: 'BER' latitud: 52.52 longitud: 13.40.		ciudad2 := Ciudad new.	ciudad2 inicializar: 'Munich' dePais: 'Alemania' conCodigo: 'MUN' latitud: 48.13 longitud: 11.58.	 	vueloIda := Domestico new.	vueloIda agregarSalida: ciudad1 yLlegada: ciudad2.	vueloVuelta:= Domestico new.	vueloVuelta agregarSalida: ciudad2 yLlegada: ciudad1.		viaje := Viaje new.	viaje agregarNombre: 'Test 01'.	viaje agregarVuelo: vueloIda enFecha: '2019-9-10'.	viaje agregarVuelo: vueloVuelta  enFecha: '2019-9-19'.		hotel := Hotel new.	hotel inicializarHotel: 'Quiero estar en alemania' en: 'MUN' conPrecio: 4000.	hotel agregarCheckIn: '2019-9-10' yCheckOut: '2019-9-19'.		viaje agregarHotel: hotel.		costoEsperado := (4000 * 9) + (504.42 * 2).	self assert: (viaje obtenerDiasViaje) equals: 10.	self assert: ((viaje calcularCostoViaje) closeTo: costoEsperado precision: 0.001).! !!ViajeTest methodsFor: 'tests' stamp: 'LocaDesquiciada 4/30/2018 20:22'!test03ViajeVueloIdaDomesticoYAsistenciaa	| viaje ciudad1 ciudad2 costoEsperado vueloIda | 		viaje := Viaje new.	viaje agregarNombre: 'Spring Break'.		ciudad1 := Ciudad new.	ciudad1 inicializar: 'Berlín' dePais: 'Alemania' conCodigo: 'BER' latitud: 52.52 longitud: 13.40.		ciudad2 := Ciudad new.	ciudad2 inicializar: 'Munich' dePais: 'Alemania' conCodigo: 'MUN' latitud: 48.13 longitud: 11.58.	 	vueloIda := Domestico new.	vueloIda agregarSalida: ciudad1 yLlegada: ciudad2.		viaje agregarVuelo: vueloIda enFecha: '2018-9-19'.	viaje agregarAsist.		costoEsperado := 504.42 * 1.1.	self assert: ((viaje calcularCostoViaje) closeTo: costoEsperado precision: 0.001). ! !!ViajeTest methodsFor: 'tests' stamp: 'LocaDesquiciada 4/30/2018 20:21'!test10ViajeVueloIdaInternacional	| viaje vueloIda ciudad1 ciudad2 costoEsperado |	 	ciudad1 := Ciudad new.	ciudad1 inicializar: 'Esctocolmo' dePais: 'Suecia' conCodigo: 'EST' latitud: 59.32 longitud: 18.06.		ciudad2 := Ciudad new.	ciudad2 inicializar: 'Reikiavik' dePais: 'Islandia' conCodigo: 'REI' latitud: 64.12 longitud: -21.81.	vueloIda := Internacional new.	vueloIda agregarSalida: ciudad1 yLlegada: ciudad2.		viaje := Viaje new.	viaje agregarNombre: 'Test 01'.	viaje agregarVuelo: vueloIda enFecha: '2019-9-10'.				costoEsperado := 2130 * 1.5 * 1.05.	self assert: ((viaje calcularCostoViaje) closeTo: costoEsperado precision: 0.001).! !!ViajeTest methodsFor: 'tests' stamp: 'LocaDesquiciada 4/30/2018 20:21'!test13ViajeVueloIdaInternacionalYHotel	| viaje vueloIda ciudad1 ciudad2 costoEsperado hotel |		ciudad1 := Ciudad new.	ciudad1 inicializar: 'Esctocolmo' dePais: 'Suecia' conCodigo: 'EST' latitud: 59.32 longitud: 18.06.		ciudad2 := Ciudad new.	ciudad2 inicializar: 'Reikiavik' dePais: 'Islandia' conCodigo: 'REI' latitud: 64.12 longitud: -21.81.	vueloIda := Internacional new.	vueloIda agregarSalida: ciudad1 yLlegada: ciudad2.		viaje := Viaje new.	viaje agregarNombre: 'Test 01'.	viaje agregarVuelo: vueloIda enFecha: '2019-9-10'.		hotel := Hotel new.	hotel inicializarHotel: 'Riki' en: 'REI' conPrecio: 2000.	hotel agregarCheckIn: '2019-9-10' yCheckOut: '2019-9-19'.		viaje agregarHotel: hotel.		costoEsperado := (2000 * 9) + (2130 * 1.5 * 1.05).	self assert: ((viaje calcularCostoViaje) closeTo: costoEsperado precision: 0.001). 	self assert: (viaje obtenerDiasViaje) equals: 10.! !TestCase subclass: #VueloTest	instanceVariableNames: ''	classVariableNames: ''	poolDictionaries: ''	category: 'AlgoViajesTest'!!VueloTest commentStamp: 'LocaDesquiciada 4/29/2018 12:54' prior: 0!Clase que testea los vuelos.!VueloTest subclass: #DomesticoTest	instanceVariableNames: ''	classVariableNames: ''	poolDictionaries: ''	category: 'AlgoViajesTest'!!DomesticoTest methodsFor: 'tests' stamp: 'LocaDesquiciada 4/28/2018 00:49'!test02VueloDomesticoDistanciaEntreCiudades	| vueloDomestico ciudadPartida ciudadArrivo costoEsperado |	ciudadPartida := Ciudad new.	ciudadPartida inicializar: 'Berlín' dePais: 'Alemania' conCodigo: 'BER' latitud: 52.52 longitud: 13.40.		ciudadArrivo := Ciudad new.	ciudadArrivo inicializar: 'Munich' dePais: 'Alemania' conCodigo: 'MUN' latitud: 48.13 longitud: 11.58.	vueloDomestico := Domestico new.	vueloDomestico agregarSalida: ciudadPartida yLlegada: ciudadArrivo.		costoEsperado := 504.42.	self assert: (( vueloDomestico obtenerDistanciaEntreCiudades )closeTo: costoEsperado precision: 0.001).! !!DomesticoTest methodsFor: 'tests' stamp: 'LocaDesquiciada 4/27/2018 23:35'!test01VueloDomesticoCosto	| vueloDomestico ciudadPartida ciudadArrivo costoEsperado |	ciudadPartida := Ciudad new.	ciudadPartida inicializar: 'Berlín' dePais: 'Alemania' conCodigo: 'BER' latitud: 52.52 longitud: 13.40.		ciudadArrivo := Ciudad new.	ciudadArrivo inicializar: 'Munich' dePais: 'Alemania' conCodigo: 'MUN' latitud: 48.13 longitud: 11.58.	vueloDomestico := Domestico new.	vueloDomestico agregarSalida: ciudadPartida yLlegada: ciudadArrivo.		costoEsperado := 504.42.	self assert: (( vueloDomestico obtenerCostoVuelo )closeTo: costoEsperado precision: 0.001).! !VueloTest subclass: #InternacionalTest	instanceVariableNames: ''	classVariableNames: ''	poolDictionaries: ''	category: 'AlgoViajesTest'!!InternacionalTest methodsFor: 'tests' stamp: 'LocaDesquiciada 4/28/2018 00:38'!test01VueloInternacionalCosto	| vueloInternacional ciudadPartida ciudadArrivo costoEsperado |	ciudadPartida := Ciudad new.	ciudadPartida inicializar: 'Esctocolmo' dePais: 'Suecia' conCodigo: 'EST' latitud: 59.32 longitud: 18.06.		ciudadArrivo := Ciudad new.	ciudadArrivo inicializar: 'Reikiavik' dePais: 'Islandia' conCodigo: 'REI' latitud: 64.12 longitud: -21.81.		vueloInternacional := Internacional new.	vueloInternacional agregarSalida: ciudadPartida  yLlegada: ciudadArrivo.		costoEsperado :=  2130 * 1.5 * 1.05.	self assert: ((vueloInternacional obtenerCostoVuelo ) closeTo: costoEsperado precision: 0.001).! !!InternacionalTest methodsFor: 'tests' stamp: 'LocaDesquiciada 4/28/2018 00:50'!test02VueloInternacionalDistanciaEntreCiudades	| vueloInternacional ciudadPartida ciudadArrivo costoEsperado |	ciudadPartida := Ciudad new.	ciudadPartida inicializar: 'Esctocolmo' dePais: 'Suecia' conCodigo: 'EST' latitud: 59.32 longitud: 18.06.		ciudadArrivo := Ciudad new.	ciudadArrivo inicializar: 'Reikiavik' dePais: 'Islandia' conCodigo: 'REI' latitud: 64.12 longitud: -21.81.		vueloInternacional := Internacional new.	vueloInternacional agregarSalida: ciudadPartida  yLlegada: ciudadArrivo.		costoEsperado :=  2130.	self assert: (( vueloInternacional obtenerDistanciaEntreCiudades ) closeTo: costoEsperado precision: 0.001).! !